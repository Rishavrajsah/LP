// Inserting Sample Dataset into the 'books' collection
db.books.insertMany([
  {
    title: "Book One",
    author: "John Doe",
    genre: "Fiction",
    price: 20,
    published_date: ISODate("2019-05-15T00:00:00Z")
  },
  {
    title: "Book Two",
    author: "John Doe",
    genre: "Fiction",
    price: 25,
    published_date: ISODate("2020-06-10T00:00:00Z")
  },
  {
    title: "Book Three",
    author: "John Doe",
    genre: "Fiction",
    price: 30,
    published_date: ISODate("2021-08-25T00:00:00Z")
  },
  {
    title: "Book Four",
    author: "Jane Smith",
    genre: "Mystery",
    price: 18,
    published_date: ISODate("2018-03-01T00:00:00Z")
  },
  {
    title: "Book Five",
    author: "Jane Smith",
    genre: "Mystery",
    price: 22,
    published_date: ISODate("2021-09-15T00:00:00Z")
  },
  {
    title: "Book Six",
    author: "Alice Brown",
    genre: "Sci-Fi",
    price: 35,
    published_date: ISODate("2022-02-10T00:00:00Z")
  },
  {
    title: "Book Seven",
    author: "Alice Brown",
    genre: "Sci-Fi",
    price: 40,
    published_date: ISODate("2023-01-05T00:00:00Z")
  },
  {
    title: "Book Eight",
    author: "Mark Lee",
    genre: "Non-Fiction",
    price: 15,
    published_date: ISODate("2017-11-21T00:00:00Z")
  }
]);

// Task 1: Find the average price of all books
db.books.aggregate([
  {
    $group: {
      _id: null,            // No grouping, calculate the total for all books
      avgPrice: { $avg: "$price" }  // Calculate the average price
    }
  }
]);

// Task 2: Find the count of books in each genre
db.books.aggregate([
  {
    $group: {
      _id: "$genre",       // Group by genre
      count: { $sum: 1 }    // Count books in each genre
    }
  }
]);

// Task 3: For each genre, find the most expensive book
db.books.aggregate([
  {
    $group: {
      _id: "$genre",            // Group by genre
      mostExpensiveBook: { $max: "$price" }  // Find the most expensive book in each genre
    }
  },
  {
    $lookup: {
      from: "books",                // Lookup the books collection to get the book with the maximum price
      localField: "mostExpensiveBook",
      foreignField: "price",
      as: "expensiveBookDetails"
    }
  },
  {
    $unwind: "$expensiveBookDetails"  // Flatten the array to get the book details
  },
  {
    $project: {
      genre: "$_id",
      title: "$expensiveBookDetails.title",
      author: "$expensiveBookDetails.author",
      price: "$expensiveBookDetails.price",
      published_date: "$expensiveBookDetails.published_date"
    }
  }
]);

// Task 4: Find the authors who have written more than 3 books
db.books.aggregate([
  {
    $group: {
      _id: "$author",              // Group by author
      bookCount: { $sum: 1 }        // Count the number of books for each author
    }
  },
  {
    $match: {
      bookCount: { $gt: 3 }         // Filter authors with more than 3 books
    }
  }
]);

// Task 5: Sort the books by published_date in descending order, and then by price in ascending order
db.books.aggregate([
  {
    $sort: {
      published_date: -1,  // Sort by published_date in descending order
      price: 1             // Sort by price in ascending order
    }
  }
]);
